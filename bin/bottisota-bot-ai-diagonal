#!/usr/bin/env python3

import bottisota
import bottisota.bot
import bottisota.math

CORNERS = (
    (0, 0),
    (bottisota.ARENA_WIDTH - 1, 0),
    (bottisota.ARENA_WIDTH - 1, bottisota.ARENA_HEIGHT - 1),
    (0, bottisota.ARENA_HEIGHT - 1),
)

controller = bottisota.bot.Controller()

x, y, speed, direction = controller.syscall_pos()
loc = x, y

corner_distances = [bottisota.math.distance(loc, c) for c in CORNERS]

closest_corner = sorted(zip(CORNERS, corner_distances), key=lambda v: v[1])[0][0]

new_direction = bottisota.math.direction(loc, closest_corner)
controller.syscall_drv(new_direction, bottisota.DRV_SPEED_MAX)
while True:
    x, y, speed, direction = controller.syscall_pos()
    loc = x, y
    if speed == 0:
        if loc != closest_corner:
            new_direction = bottisota.math.direction(loc, closest_corner)
        else:
            diagonal_corner = CORNERS[(CORNERS.index(loc) + 2) % 4]
            new_direction = bottisota.math.direction(loc, diagonal_corner)
        controller.syscall_drv(new_direction, bottisota.DRV_SPEED_MAX)
